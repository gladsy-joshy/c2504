P3. print the following pattern 
        1
      1 2
    1 2 3
  1 2 3 4
1 2 3 4 5 
Here, N = number of lines = 5
    Q7: use for loop
    Q8: use while loop
    Q9: use do..while loop





		Q1: use for loop
	----------------
	
Pseudocode
-----------	  
function PrintNumTriangleMirroredRightAngle(N) = 5
    for I = 1; I <= N; I++          
        for J = 1; J <= N-I; J++     
            Print "  "                 
        end for 
        for J = 1; J <= I; J++       
            Print J + " "           
        end for 
        Print NewLine 
    end for 
function TestPrintNumTriangleMirroredRightAngle()
    Input N 
    PrintNumTriangleMirroredRightAngle(N)
	  
c#
---	 
class Q07
{
    
    static void PrintNumTriangleMirroredRightAngle(int N)
    { 
        for(int I = 1; I <= N; I++ )
        { 
            for(int J = 1; J <= N-I; J++)
            {
                Console.Write("  "); //2 spaces
            }
            for(int J = 1; J <= I; J++)
            {
                Console.Write($"{J} ");//num and space
            }
            Console.WriteLine();//new line 
        }
    }
    //input=4,output=4 lines triangle 
    //input=5,output=5 lines triangle 
    //input=7,output=7 lines triangle 
    static void TestPrintNumTriangleMirroredRightAngle()
    {
        Console.Write("Enter number of lines:");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngle(N);
    }
    static void Main(string[] args) //user: p
    {
        Console.WriteLine("-----TestPrintNumTriangleMirroredRightAngle-----");
        TestPrintNumTriangleMirroredRightAngle();
        Console.WriteLine("-----End TestPrintNumTriangleMirroredRightAngle-----");
        Console.WriteLine("Press any key to contine...");
        Console.ReadKey();
    }
}
	  
	 Q2: use while loop
	 ------------------
	 
Pseudocode
-----------	
function PrintNumTriangleMirroredRightAngleWhile(N)
    I = 1
    while I <= N
        J = 1
        while J <= N - I
            Print "  "                 
            J = J + 1
        end while 
        J = 1
        while J <= I
            Print J + " "
            J = J + 1
        end while 
        Print NewLine 
        I = I + 1
    end while 
function TestPrintNumTriangleMirroredRightAngleWhile()
    Input N 
    PrintNumTriangleMirroredRightAngleWhile(N)
  
	  
c#
---	 

class Q08
{
    static void PrintNumTriangleMirroredRightAngleWhile(int N)
    {
        int I = 1;
        while (I <= N)
        {
            int J = 1;
            while (J <= N - I)
            {
                Console.Write("  "); // 2 spaces
                J++;
            }
            J = 1;
            while (J <= I)
            {
                Console.Write($"{J} "); // num and space
                J++;
            }
            Console.WriteLine(); // new line
            I++;
        }
    }

    static void TestPrintNumTriangleMirroredRightAngleWhile()
    {
        Console.Write("Enter number of lines: ");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngleWhile(N);
    }

    static void Main(string[] args)
    {
        Console.WriteLine("-----TestPrintNumTriangleMirroredRightAngleWhile-----");
        TestPrintNumTriangleMirroredRightAngleWhile();
        Console.WriteLine("-----End TestPrintNumTriangleMirroredRightAngleWhile-----");
        Console.WriteLine("Press any key to continue...");
        Console.ReadKey();
    }
}

	  
	  
		Q3: use do..while loop
	----------------------
	
Pseudocode
-----------  
function PrintNumTriangleMirroredRightAngleDoWhile(N)
    I = 1
    do
        J = 1
        do
            Print "  "                 
            J = J + 1
        while J <= N - I
        J = 1
        do
            Print J + " "
            J = J + 1
        while J <= I
        Print NewLine 
        I = I + 1
    while I <= N
function TestPrintNumTriangleMirroredRightAngleDoWhile()
    Input N 
    PrintNumTriangleMirroredRightAngleDoWhile(N)

	  
	  
c#
---	  
	 
class Q09
{
    static void PrintNumTriangleMirroredRightAngleDoWhile(int N)
    {
        int I = 1;
        do
        {
            int J = 1;
            do
            {
                if (J <= N - I)
                {
                    Console.Write("  "); // 2 spaces
                }
                J++;
            } while (J <= N - I);
            J = 1;
            do
            {
                if (J <= I)
                {
                    Console.Write($"{J} "); // num and space
                }
                J++;
            } while (J <= I);
            Console.WriteLine(); // new line
            I++;
        } while (I <= N);
    }

    static void TestPrintNumTriangleMirroredRightAngleDoWhile()
    {
        Console.Write("Enter number of lines: ");
        int N = int.Parse(Console.ReadLine());
        PrintNumTriangleMirroredRightAngleDoWhile(N);
    }

    static void Main(string[] args)
    {
        Console.WriteLine("-----TestPrintNumTriangleMirroredRightAngleDoWhile-----");
        TestPrintNumTriangleMirroredRightAngleDoWhile();
        Console.WriteLine("-----End TestPrintNumTriangleMirroredRightAngleDoWhile-----");
        Console.WriteLine("Press any key to continue...");
        Console.ReadKey();
    }
}
