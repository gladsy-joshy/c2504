using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime;
using System.Text;
using System.Threading.Tasks;
 
namespace LearnCSharp
{
    class Point
    {
        public int X { get; set; }
        public int Y { get; set; }
 
        public override bool Equals(object obj)
        {
            var other = (Point)obj;
            return X == other.X && Y == other.Y;
        }
    }
 
    internal class Program
    {
        static void Main()
        {
            var p1 = new Point() { X = 1, Y = 2 };
            var p2 = new Point() { Y = 1, X = 2 };
            if (p1.Equals(p2))
            {
                Console.WriteLine("Same");
            }
            else
            {
                Console.WriteLine("Not same");
            }
        }
 
    }
}

--------------------------------------------------------------------------------------------------------------



using System;

using System.Collections.Generic;

using System.Linq;

using System.Runtime;

using System.Text;

using System.Threading.Tasks;
 
namespace LearnCSharp

{

    class Employee

    {

        public string Name { get; set; }

        public string Email { get; set; }

        public int Age { get; set; }
 
        public override string ToString()

        {

            return $"Name: {Name} {Environment.NewLine}" +

                $"Email: {Email} {Environment.NewLine}" +

                $"Age: {Age}";

        }

    }
 
    internal class Program

    {

        static void Main()

        {

            var employees = new Employee[10];

            int count = 0;
 
            while (true)

            {

                Console.WriteLine("1. Add new employee");

                Console.WriteLine("2. Search employee");

                Console.Write("Please enter your option: ");

                var option = Console.ReadLine();
 
                switch (option)

                {

                    case "1":

                        var emp = new Employee();

                        Console.Write("Name: ");

                        emp.Name = Console.ReadLine();

                        Console.Write("Email: ");

                        emp.Email = Console.ReadLine();

                        Console.Write("Age: ");

                        emp.Age = int.Parse(Console.ReadLine());

                        employees[count] = emp;

                        count++;

                        break;

                    case "2":

                        Console.WriteLine("Email: ");

                        var email = Console.ReadLine();
 
                        for (int i = 0; i < count; i++)

                        {

                            var e = employees[i];

                            if (e.Email == email)

                            {

                                Console.WriteLine(e);

                                break;

                            }

                        }

                        break;

                    default:

                        Console.WriteLine("Invalid option");

                        break;

                }

            }

        }
 
    }

}

 
 
 op:
 
 
 
 1. Add new employee
2. Search employee
Please enter your option: 1
Name: emp1
Email: em1@mail.com
Age: 23
1. Add new employee
2. Search employee
Please enter your option: emp2
Invalid option
1. Add new employee
2. Search employee
Please enter your option: 1
Name: emp2
Email: em2@mail.com
Age: 24
1. Add new employee
2. Search employee
Please enter your option: 2
Email:
em2@mail.com
Name: emp2
Email: em2@mail.com
Age: 24


--------------------------------------------------------------------------------------------------------



using System;



namespace LearnCSharp

{

    class Employee

    {

        public string Name { get; set; }

        public string Email { get; set; }

        public int Age { get; set; }

        public override string ToString()

        {

            return $"Name: {Name} {Environment.NewLine}" +

                $"Email: {Email} {Environment.NewLine}" +

                $"Age: {Age}";

        }

    }

    class EmployeeAdd
    {

       private  Employee[] _employees = new Employee[10];

        private int _count = 0;


        public void Add()
        {
            var emp = new Employee();

            Console.Write("Name: ");

            emp.Name = Console.ReadLine();

            Console.Write("Email: ");

            emp.Email = Console.ReadLine();

            Console.Write("Age: ");

            emp.Age = int.Parse(Console.ReadLine());

            _employees[_count] = emp;

            _count++;
        }

        public void Search()
        {
            Console.WriteLine("Email: ");

            var email = Console.ReadLine();

            for (int i = 0; i < _count; i++)

            {

                var e = _employees[i];

                if (e.Email == email)

                {

                    Console.WriteLine(e);

                    break;

                }

            }
        }

    }

    internal class Program

    {

        static void Main()

        {
            var manager = new EmployeeAdd();

            while (true)

            {

                Console.WriteLine("1. Add new employee");

                Console.WriteLine("2. Search employee");

                Console.Write("Please enter your option: ");

                var option = Console.ReadLine();

                switch (option)

                {

                    case "1":

                        manager.Add();

                        break;

                    case "2":

                       manager.Search();

                        break;

                    default:

                        Console.WriteLine("Invalid option");

                        break;

                }

            }

        }

    }

}


-----------------------------------------------------------------------------------------------------------------------------------



using enum string conversion


using System;

enum Convertion
{
    Upper,
    Lower,
    Trim
}

internal class Program
{
    static void Convert(string text, Convertion action)
    {
        // Using if-else to perform the conversion
        if (action == Convertion.Upper)
            Console.WriteLine(text.ToUpper());
        else if (action == Convertion.Lower)
            Console.WriteLine(text.ToLower());
        else if (action == Convertion.Trim)
            Console.WriteLine(text.Trim());

        // Using switch to perform the conversion
        switch (action)
        {
            case Convertion.Upper:
                Console.WriteLine(text.ToUpper());
                break;
            case Convertion.Lower:
                Console.WriteLine(text.ToLower());
                break;
            case Convertion.Trim:
                Console.WriteLine(text.Trim());
                break;
            default:
                break;
        }
    }

    static void Main()
    {
        Console.Write("Enter a string: ");
        string input = Console.ReadLine();

        Console.WriteLine("1. To Upper");
        Console.WriteLine("2. To Lower");
        Console.WriteLine("3. To Trim");

        Console.Write("Enter your choice: ");
        int choice = int.Parse(Console.ReadLine());

        Convertion action;

        switch (choice)
        {
            case 1:
                action = Convertion.Upper;
                break;
            case 2:
                action = Convertion.Lower;
                break;
            case 3:
                action = Convertion.Trim;
                break;
            default:
                Console.WriteLine("Invalid choice");
                return;
        }

        Convert(input, action);
    }
}


-------------------------------------------------------------------------------------------------------
